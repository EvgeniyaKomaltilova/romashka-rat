# Generated by Django 3.1 on 2020-09-11 04:18

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Litter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public', models.BooleanField(default=True, verbose_name='опубликовать')),
                ('name', models.CharField(max_length=8, verbose_name='название')),
                ('number', models.CharField(blank=True, max_length=16, null=True, verbose_name='номер')),
                ('date_of_birth', models.DateField(default=datetime.date.today, verbose_name='дата рождения')),
                ('year', models.CharField(default=2020, max_length=4, verbose_name='год рождения')),
            ],
            options={
                'verbose_name': 'литеру',
                'verbose_name_plural': 'Литеры',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=32, verbose_name='страна')),
                ('region', models.CharField(max_length=322, null=True, verbose_name='регион')),
                ('city', models.CharField(max_length=32, verbose_name='населенный пункт')),
            ],
            options={
                'verbose_name': 'локацию',
                'verbose_name_plural': 'Локации',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=32, verbose_name='имя')),
                ('second_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='отчество')),
                ('last_name', models.CharField(max_length=32, verbose_name='фамилия')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='persons', to='rattery.location', verbose_name='место проживания')),
            ],
            options={
                'verbose_name': 'личность',
                'verbose_name_plural': 'Заводчики и владельцы',
            },
        ),
        migrations.CreateModel(
            name='Prefix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('female_name', models.CharField(max_length=32, verbose_name='приставка для самки')),
                ('male_name', models.CharField(max_length=32, verbose_name='приставка для самца')),
                ('suffix', models.BooleanField(default=True, verbose_name='после клички')),
            ],
            options={
                'verbose_name': 'приставку',
                'verbose_name_plural': 'Приставки питомников',
            },
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read', models.BooleanField(default=False, verbose_name='прочитано')),
                ('approved', models.BooleanField(default=False, verbose_name='одобрено')),
                ('date', models.DateTimeField(default=datetime.datetime.now, verbose_name='дата заполнения')),
                ('name', models.CharField(max_length=64, null=True, verbose_name='ФИО')),
                ('email', models.EmailField(max_length=254, null=True)),
                ('age', models.PositiveIntegerField(null=True, verbose_name='возраст')),
                ('location', models.CharField(max_length=64, null=True, verbose_name='место проживания')),
                ('which_baby_rat', models.CharField(max_length=128, null=True, verbose_name='Какой крысенок интересует')),
                ('allergy', models.TextField(max_length=256, null=True, verbose_name='Наличие аллергии')),
                ('know_how', models.TextField(max_length=512, null=True, verbose_name='Осведомленность в вопросах содержания')),
                ('pet_or_breed', models.TextField(max_length=256, null=True, verbose_name='Любимец или в разведение')),
                ('friend', models.TextField(max_length=512, null=True, verbose_name='Наличие друга для крысенка')),
                ('contract', models.TextField(max_length=64, null=True, verbose_name='Готовность подписать договор')),
                ('recommendation', models.TextField(max_length=256, null=True, verbose_name='Наличие рекомендаций')),
                ('additionally', models.TextField(max_length=4096, null=True, verbose_name='Дополнительно')),
            ],
            options={
                'verbose_name': 'анкету',
                'verbose_name_plural': 'анкеты',
            },
        ),
        migrations.CreateModel(
            name='Rat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public', models.BooleanField(default=True, verbose_name='опубликовать')),
                ('alive', models.BooleanField(default=True, verbose_name='жив(а)')),
                ('in_rattery', models.BooleanField(default=False, verbose_name='производитель')),
                ('castrate', models.BooleanField(default=False, verbose_name='кастрирован(а)')),
                ('status', models.CharField(choices=[('available', 'свободен'), ('reserved', 'зарезервирован'), ('owned', 'у владельца')], default='owned', max_length=16, verbose_name='статус')),
                ('date_of_add', models.DateTimeField(auto_now_add=True, verbose_name='дата добавления')),
                ('name', models.CharField(max_length=32, verbose_name='кличка')),
                ('variety', models.CharField(max_length=128, verbose_name='разновидность')),
                ('gender', models.CharField(choices=[('male', 'самец'), ('female', 'самка')], default='male', max_length=8, verbose_name='пол')),
                ('title', models.CharField(choices=[('none', 'без титула'), ('champion', 'чемпион'), ('grandchampion', 'грандчемпион')], default='none', max_length=16, verbose_name='титул')),
                ('date_of_birth', models.DateField(default=datetime.date.today, verbose_name='дата рождения')),
                ('date_of_death', models.DateField(blank=True, default=None, null=True, verbose_name='дата смерти')),
                ('information', models.TextField(blank=True, max_length=2048, null=True, verbose_name='информация')),
                ('breeder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rats_bred', to='rattery.person', verbose_name='заводчик')),
                ('father', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='father_children', to='rattery.rat', verbose_name='отец')),
                ('litter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='rattery.litter', verbose_name='литера')),
                ('mother', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mother_children', to='rattery.rat', verbose_name='мать')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rats_own', to='rattery.person', verbose_name='владелец')),
                ('prefix', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rats', to='rattery.prefix', verbose_name='приставка')),
            ],
            options={
                'verbose_name': 'крысу',
                'verbose_name_plural': 'Крысы',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=datetime.datetime.now, verbose_name='дата публикации')),
                ('name', models.CharField(max_length=128, verbose_name='название')),
                ('picture', models.ImageField(upload_to='images', verbose_name='фото')),
                ('rat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='rattery.rat', verbose_name='крыса')),
            ],
            options={
                'verbose_name': 'фото',
                'verbose_name_plural': 'Фото',
            },
        ),
        migrations.AddField(
            model_name='litter',
            name='breeder',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='litters', to='rattery.person', verbose_name='заводчик'),
        ),
        migrations.AddField(
            model_name='litter',
            name='father',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='father_litters', to='rattery.rat', verbose_name='отец'),
        ),
        migrations.AddField(
            model_name='litter',
            name='mother',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mother_litters', to='rattery.rat', verbose_name='мать'),
        ),
        migrations.AddField(
            model_name='litter',
            name='prefix',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='litters', to='rattery.prefix', verbose_name='приставка'),
        ),
    ]
